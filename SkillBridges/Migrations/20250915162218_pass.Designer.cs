// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillBridges.Data;

#nullable disable

namespace SkillBridges.Migrations
{
    [DbContext(typeof(SkillBridgeContext))]
    [Migration("20250915162218_pass")]
    partial class pass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillBridges.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SkillBridges.Models.ClientProfile", b =>
                {
                    b.Property<string>("ClientProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ClientProfiles");
                });

            modelBuilder.Entity("SkillBridges.Models.ProfessionalProfile", b =>
                {
                    b.Property<string>("ProfessionalProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProfessionalProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfessionalProfiles");
                });

            modelBuilder.Entity("SkillBridges.Models.ProfessionalSkill", b =>
                {
                    b.Property<string>("ProfessionalProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkillId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProfessionalProfileId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("ProfessionalSkills");
                });

            modelBuilder.Entity("SkillBridges.Models.Skill", b =>
                {
                    b.Property<string>("SkillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SkillBridges.Models.Task", b =>
                {
                    b.Property<string>("TaskId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Budjet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ClientProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ClientProfileId");

                    b.HasIndex("ProfessionalProfileId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("SkillBridges.Models.TaskApplication", b =>
                {
                    b.Property<string>("TaskApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AppliedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ExpectedBudjet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProfessionalProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Proposal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TaskApplicationId");

                    b.HasIndex("ClientProfileId");

                    b.HasIndex("ProfessionalProfileId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskApplications");
                });

            modelBuilder.Entity("SkillBridges.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SkillBridges.Models.ClientProfile", b =>
                {
                    b.HasOne("SkillBridges.Models.User", "User")
                        .WithOne("ClientProfile")
                        .HasForeignKey("SkillBridges.Models.ClientProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillBridges.Models.ProfessionalProfile", b =>
                {
                    b.HasOne("SkillBridges.Models.User", "User")
                        .WithOne("ProfessionalProfile")
                        .HasForeignKey("SkillBridges.Models.ProfessionalProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillBridges.Models.ProfessionalSkill", b =>
                {
                    b.HasOne("SkillBridges.Models.ProfessionalProfile", "ProfessionalProfile")
                        .WithMany("Skills")
                        .HasForeignKey("ProfessionalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkillBridges.Models.Skill", "Skill")
                        .WithMany("ProfessionalSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalProfile");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("SkillBridges.Models.Task", b =>
                {
                    b.HasOne("SkillBridges.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillBridges.Models.ClientProfile", "ClientProfile")
                        .WithMany("Tasks")
                        .HasForeignKey("ClientProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillBridges.Models.ProfessionalProfile", "ProfessionalProfile")
                        .WithMany("Tasks")
                        .HasForeignKey("ProfessionalProfileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("ClientProfile");

                    b.Navigation("ProfessionalProfile");
                });

            modelBuilder.Entity("SkillBridges.Models.TaskApplication", b =>
                {
                    b.HasOne("SkillBridges.Models.ClientProfile", "ClientProfile")
                        .WithMany("TaskApplications")
                        .HasForeignKey("ClientProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillBridges.Models.ProfessionalProfile", "ProfessionalProfile")
                        .WithMany("TaskApplications")
                        .HasForeignKey("ProfessionalProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillBridges.Models.Task", "Task")
                        .WithMany("TaskApplications")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientProfile");

                    b.Navigation("ProfessionalProfile");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("SkillBridges.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("SkillBridges.Models.ClientProfile", b =>
                {
                    b.Navigation("TaskApplications");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("SkillBridges.Models.ProfessionalProfile", b =>
                {
                    b.Navigation("Skills");

                    b.Navigation("TaskApplications");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("SkillBridges.Models.Skill", b =>
                {
                    b.Navigation("ProfessionalSkills");
                });

            modelBuilder.Entity("SkillBridges.Models.Task", b =>
                {
                    b.Navigation("TaskApplications");
                });

            modelBuilder.Entity("SkillBridges.Models.User", b =>
                {
                    b.Navigation("ClientProfile")
                        .IsRequired();

                    b.Navigation("ProfessionalProfile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
