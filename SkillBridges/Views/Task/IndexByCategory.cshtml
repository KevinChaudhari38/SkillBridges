@model SkillBridges.ViewModels.ProfessionalTasksViewModel

@{
    ViewData["Title"] = "Tasks for Professional";
}

<h1>Tasks</h1>
<form asp-action="IndexByCategory" method="get">
    <input type="hidden" name="professionalProfileId" value="@Model.ProfessionalProfileId" />

    <label for="categorySelect">Select Category:</label>
    <select asp-for="SelectedCategoryId"
            asp-items="@(new SelectList(Model.Categories, "CategoryId", "Name", Model.SelectedCategoryId))"
            class="form-control"
            onchange="this.form.submit()">
        <option value="">-- Select Category --</option>
    </select>

</form>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().TaskId)</th>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().Title)</th>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().Description)</th>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().Budjet)</th>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().CreatedAt)</th>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().Deadline)</th>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().ClientName)</th>
            <th>@Html.DisplayNameFor(model => model.Tasks.First().CategoryName)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Tasks)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.TaskId)</td>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.Budjet)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                <td>@Html.DisplayFor(modelItem => item.Deadline)</td>
                <td>@Html.DisplayFor(modelItem => item.ClientName)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                <td>
                    @{
                        bool isRequested = Model.TaskApplications.Any(a => a.TaskId == item.TaskId);
                    
}
                    @if (isRequested)
                    {
                        <button class="btn btn-secondary" disabled>Requested</button>
                    }
                    else
                    {
                        <a asp-controller="TaskApplication"
                           asp-action="Create"
                           asp-route-taskId="@item.TaskId"
                           asp-route-clientId="@item.ClientProfileId"
                           asp-route-professionalId="@Model.ProfessionalProfileId"
                           class="btn btn-primary">
                            Request
                        </a>
                    }
                </td>
                
            </tr>
        }
    </tbody>
</table>
