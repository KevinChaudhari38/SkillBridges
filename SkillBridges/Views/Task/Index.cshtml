@model IEnumerable<SkillBridges.ViewModels.TaskViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TaskId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Budjet)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Deadline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProfessionalName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TaskId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Budjet)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientName)
            </td>
            <td>
                @(string.IsNullOrEmpty(item.ProfessionalName)?"UnAssigned":item.ProfessionalName)
            </td>
             <td>
                @Html.DisplayFor(modelItem => item.Status)
             </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {  id=item.TaskId }) |
                @Html.ActionLink("Details", "Details", new { id=item.TaskId }) |
                @Html.ActionLink("Delete", "Delete", new {id=item.TaskId}) <br />
                @if (item.Status=="Open")
                    {
                <a asp-controller="TaskApplication" asp-action="ClientRequests" asp-route-taskId="@item.TaskId">View Requests</a>  <br />
                    }
                @if (item.Status != "Open" && item.PaymentStatus != "Paid")
{
                <a asp-controller="Payment" asp-action="Pay" asp-route-taskId="@item.TaskId" class="btn btn-success mb-1">
                    Pay ₹@item.Budjet
                </a>
}
else if(item.PaymentStatus == "Paid")
{
                <span class="badge bg-success">Paid</span>
}





            </td>
        </tr>
}
    </tbody>
</table>



<p>
    @if (Model.Any())
    {
        <a asp-action="Create" asp-route-clientId="@Model.First().ClientProfileId" class="btn btn-primary">Create New Task</a>
    }
</p>

