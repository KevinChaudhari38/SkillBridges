@model IEnumerable<SkillBridges.ViewModels.TaskViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Tasks</h1>

<div class="table-responsive">
    <table class="table table-striped table-bordered align-middle">
        <thead class="table-dark">
            <tr>
               
                <th>@Html.DisplayNameFor(model => model.Title)</th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.Budjet)</th>
                <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
                <th>@Html.DisplayNameFor(model => model.Deadline)</th>
                <th>@Html.DisplayNameFor(model => model.ClientName)</th>
                <th>@Html.DisplayNameFor(model => model.ProfessionalName)</th>
                <th>@Html.DisplayNameFor(model => model.Status)</th>
                <th>@Html.DisplayNameFor(model => model.CategoryName)</th>
                <th>@Html.DisplayNameFor(model=>model.PaymentStatus)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                   
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.Budjet)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                    <td>@Html.DisplayFor(modelItem => item.Deadline)</td>
                    <td>@Html.DisplayFor(modelItem => item.ClientName)</td>
                    <td>@(string.IsNullOrEmpty(item.ProfessionalName) ? "UnAssigned" : item.ProfessionalName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                    <td>@(string.IsNullOrEmpty(item.PaymentStatus) ? "Pending" : item.PaymentStatus)</td>
                    <td>
                        <div class="d-flex flex-column gap-1">
                            @Html.ActionLink("Edit", "Edit", new { id = item.TaskId }, new { @class = "btn btn-sm btn-outline-primary" })
                            @Html.ActionLink("Details", "Details", new { id = item.TaskId }, new { @class = "btn btn-sm btn-outline-secondary" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.TaskId }, new { @class = "btn btn-sm btn-outline-danger" })
                            @if (item.Status == "Open")
                            {
                                <a asp-controller="TaskApplication" asp-action="ClientRequests" asp-route-taskId="@item.TaskId" class="btn btn-sm btn-outline-info">View Requests</a>
                            }
                            @if (item.Status != "Open")
                            {
                                <a asp-controller="Work" asp-action="Index" asp-route-TaskId="@item.TaskId" class="btn btn-sm btn-outline-success">View Work</a>
                                <a asp-controller="Message" asp-action="Create" asp-route-id="@item.TaskId" asp-route-senderId="@item.ClientProfileId" asp-route-receiverId="@item.ProfessionalProfileId" class="btn btn-sm btn-outline-warning">Message</a>
                                <a asp-controller="Message" asp-action="Index" asp-route-TaskId="@item.TaskId" asp-route-ViewerId="@item.ClientProfileId" class="btn btn-sm btn-outline-dark">View Messages</a>
                                <a asp-controller="Professional" asp-action="Details" asp-route-id="@item.ProfessionalProfileId" class="btn btn-outline-secondary">Professional Profile</a>
                            }
                            @if (item.Status != "Open")
                            {
                                <a asp-controller="Payment" asp-action="Pay" asp-route-taskId="@item.TaskId" class="btn btn-outline-success mb-1">
                                    Pay
                                </a>
                            }
                            @if(item.PaymentStatus == "Paid")
                            {
                                <a asp-controller="Payment" asp-action="Index" asp-route-TaskId="@item.TaskId" class="btn btn-outline-info">
                                View Payment History    
                                </a>
                            }
                            @if (item.Status == "Completed")
                            {
                                <a asp-controller="Rating" asp-action="Create" asp-Route-TaskId="@item.TaskId" class="btn btn-sm-outline-primary">Give Ratings</a>
                            }
                        </div> 
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@if (Model.Any())
{
    <div class="mt-3">
        <a asp-action="Create" asp-route-clientId="@Model.First().ClientProfileId" class="btn btn-primary btn-lg">Create New Task</a>
    </div>
}





   
