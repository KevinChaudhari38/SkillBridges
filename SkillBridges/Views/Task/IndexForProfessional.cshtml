@model IEnumerable<SkillBridges.ViewModels.TaskViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TaskId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Budjet)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Deadline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProfessionalName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Budjet)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClientName)
                </td>
                <td>
                    @(string.IsNullOrEmpty(item.ProfessionalName) ? "UnAssigned" : item.ProfessionalName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @if (item.Status == "Open" || item.Status=="Rejected")
                    {
                        <a asp-controller="Task" asp-action="InProgress" asp-route-TaskId="@item.TaskId">Mark InProgress</a><br />
                    }
                    @if (item.Status == "Assigned" || item.Status=="InProgress")
                    {   
                        <a asp-controller='Work' asp-action="Create" asp-route-TaskId="@item.TaskId">Add Work</a><br />
                        <a asp-controller="Work" asp-action="Index" asp-route-TaskId="@item.TaskId">View Work</a><br />
                    }
                    
                    <a asp-controller="Message" asp-action="Create" asp-route-id="@item.TaskId" asp-route-senderId="@item.ProfessionalProfileId" asp-route-receiverId="@item.ClientProfileId">Message</a><br />
                    <a asp-controller="Message" asp-action="Index" asp-route-TaskId="@item.TaskId" asp-route-ViewerId="@item.ProfessionalProfileId">View Messages</a>
                    
                </td>
            </tr>
        }
    </tbody>
</table>





