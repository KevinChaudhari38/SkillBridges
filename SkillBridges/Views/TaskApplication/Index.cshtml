@model IEnumerable<SkillBridges.ViewModels.TaskApplicationViewModel>

@{
    ViewData["Title"] = "Task Applications";
}

<h1 class="mb-4">Task Applications</h1>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            
            <th>@Html.DisplayNameFor(model => model.TaskTitle)</th>
            <th>Client</th>
            <th>Professional</th>
            <th>@Html.DisplayNameFor(model => model.Proposal)</th>
            <th>Skills</th>
            <th>@Html.DisplayNameFor(model => model.ExpectedBudjet)</th>
            <th>@Html.DisplayNameFor(model => model.AppliedAt)</th>
            <th>File</th>
            <th>Status / Actions</th>
            <th>Manage</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                
                <td>@Html.DisplayFor(modelItem => item.TaskTitle)</td>
                <td>@Html.DisplayFor(modelItem => item.ClientName)</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.ProfessionalName)){
                    
                        @Html.DisplayFor(modelItem => item.ProfessionalName)
                        
                    }
                    else
                    {
                        <span class="text-muted">Unassigned</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Proposal)</td>
                <td>
                    @if (item.Skills != null && item.Skills.Any())
                    {
                        foreach (var skill in item.Skills)
                        {
                            <span class="badge bg-primary me-1">@skill</span>
                        }
                    }
                    else
                    {
                        <span class="text-muted">No Skills</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.ExpectedBudjet)</td>
                <td>@Html.DisplayFor(modelItem => item.AppliedAt)</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.File))
                    {
                        <a href="@item.File" target="_blank" class="btn btn-link">Download</a>
                    }
                    else
                    {
                        <span class="text-muted">No File</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                    
                </td>
                @if (User.IsInRole("Professional"))
                {
                    <td>
                        <a asp-action="Delete" asp-route-id="@item.TaskApplicationId" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                }
                else
                {
                    <td>Nothing To Manage</td>
                }
               
            </tr>
        }
    </tbody>
</table>
